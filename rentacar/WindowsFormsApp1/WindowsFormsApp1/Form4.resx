<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>